@model IEnumerable<AppliedProg2.Models.Volunteer>
@{
    ViewData["Title"] = "Volunteers";
}

@section Styles {
    <style>
        :root {
            --primary-black: #0a0a0a;
            --dark-gray: #1a1a1a;
            --light-gray: #2a2a2a;
            --accent-purple: #a78bfa;
            --light-purple: #c4b5fd;
            --bright-purple: #8b5cf6;
            --white: #ffffff;
            --off-white: #f5f5f5;
            --text-gray: #d1d5db;
            --urgent-red: purple;
            --warning-orange: purple;
            --success-green: pink;
            --info-blue: purple;
        }

        .volunteers-container {
            min-height: 80vh;
            background: radial-gradient(circle at 20% 80%, rgba(167, 139, 250, 0.15) 0%, transparent 50%), radial-gradient(circle at 80% 20%, rgba(167, 139, 250, 0.1) 0%, transparent 50%), url('https://images.unsplash.com/photo-1690321607729-bce901c77324?q=80&w=387&auto=format&fit=crop&ixlib=rb-4.1.0&ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D');
            background-size: cover;
            background-position: center;
            background-blend-mode: overlay;
            padding: 20px 0;
            color: var(--white);
        }

        .page-header {
            background: linear-gradient(135deg, var(--primary-black) 0%, var(--light-gray) 100%);
            color: var(--white);
            padding: 3rem 0;
            margin-bottom: 2rem;
            border-radius: 0 0 20px 20px;
            position: relative;
            overflow: hidden;
            border-bottom: 3px solid var(--accent-purple);
        }

            .page-header::before {
                content: '';
                position: absolute;
                top: 0;
                left: 0;
                right: 0;
                bottom: 0;
                background: radial-gradient(circle at 30% 20%, rgba(167, 139, 250, 0.1) 0%, transparent 50%);
            }

        .header-content {
            position: relative;
            z-index: 1;
        }

        .btn-join-volunteer {
            background: linear-gradient(135deg, var(--warning-orange), #e67e22);
            border: none;
            border-radius: 12px;
            padding: 12px 25px;
            font-weight: 700;
            font-size: 1.1rem;
            transition: all 0.3s ease;
            box-shadow: 0 4px 15px rgba(245, 158, 11, 0.3);
            color: var(--white);
        }

            .btn-join-volunteer:hover {
                transform: translateY(-2px);
                box-shadow: 0 6px 20px rgba(245, 158, 11, 0.4);
                background: linear-gradient(135deg, #e67e22, var(--warning-orange));
            }

        .volunteer-card {
            border: none;
            border-radius: 15px;
            box-shadow: 0 8px 25px rgba(0, 0, 0, 0.3);
            transition: all 0.3s ease;
            background: var(--dark-gray);
            overflow: hidden;
            height: 100%;
            border-left: 4px solid var(--accent-purple);
        }

            .volunteer-card:hover {
                transform: translateY(-5px);
                box-shadow: 0 15px 35px rgba(167, 139, 250, 0.2);
            }

        .card-body {
            padding: 2rem;
            text-align: center;
            background: var(--dark-gray);
        }

        .volunteer-avatar {
            width: 100px;
            height: 100px;
            border-radius: 50%;
            background: linear-gradient(135deg, var(--accent-purple), var(--light-purple));
            display: flex;
            align-items: center;
            justify-content: center;
            margin: 0 auto 1.5rem;
            box-shadow: 0 8px 20px rgba(167, 139, 250, 0.3);
            border: 4px solid var(--light-gray);
        }

            .volunteer-avatar i {
                font-size: 2.5rem;
                color: var(--primary-black);
            }

        .card-title {
            color: var(--accent-purple);
            font-weight: 700;
            font-size: 1.3rem;
            margin-bottom: 1rem;
        }

        .volunteer-details {
            color: var(--text-gray);
            font-size: 0.95rem;
            line-height: 1.6;
            text-align: left;
        }

            .volunteer-details strong {
                color: var(--accent-purple);
                display: inline-flex;
                align-items: center;
                margin-right: 5px;
            }

                .volunteer-details strong i {
                    margin-right: 5px;
                    font-size: 0.9rem;
                    width: 16px;
                    text-align: center;
                }

        .skills-badge {
            background: linear-gradient(135deg, rgba(167, 139, 250, 0.1), rgba(167, 139, 250, 0.05));
            border: 1px solid var(--accent-purple);
            border-radius: 20px;
            padding: 8px 15px;
            font-size: 0.85rem;
            color: var(--accent-purple);
            margin: 0.5rem 0;
            display: inline-block;
        }

        .transportation-badge {
            background: linear-gradient(135deg, rgba(16, 185, 129, 0.1), rgba(5, 150, 105, 0.05));
            border: 1px solid var(--success-green);
            border-radius: 20px;
            padding: 6px 12px;
            font-size: 0.8rem;
            color: var(--success-green);
            font-weight: 600;
            margin: 0.5rem 0;
            display: inline-flex;
            align-items: center;
            gap: 5px;
        }

        .card-footer {
            background: var(--light-gray);
            border-top: 2px solid var(--dark-gray);
            padding: 1.25rem;
            text-align: center;
        }

        .status-badge {
            border-radius: 20px;
            padding: 6px 15px;
            font-weight: 600;
            font-size: 0.8rem;
            box-shadow: 0 2px 8px rgba(0,0,0,0.3);
            color: var(--white);
        }

        .empty-state {
            background: var(--dark-gray);
            border-radius: 20px;
            padding: 3rem;
            text-align: center;
            box-shadow: 0 8px 25px rgba(0, 0, 0, 0.3);
            margin: 2rem 0;
            border: 2px solid var(--accent-purple);
        }

        .empty-state-icon {
            font-size: 4rem;
            color: var(--accent-purple);
            margin-bottom: 1rem;
        }

        .stats-overview {
            background: linear-gradient(135deg, var(--light-gray), var(--dark-gray));
            border: 2px solid var(--accent-purple);
            border-radius: 15px;
            padding: 2rem;
            margin: 2rem 0;
            box-shadow: 0 8px 25px rgba(0, 0, 0, 0.3);
        }

        .stats-title {
            color: var(--accent-purple);
            font-weight: 700;
            margin-bottom: 1.5rem;
            display: flex;
            align-items: center;
            justify-content: center;
        }

        .stats-grid {
            display: grid;
            grid-template-columns: repeat(auto-fit, minmax(150px, 1fr));
            gap: 1.5rem;
            text-align: center;
        }

        .stat-item {
            padding: 1rem;
        }

        .stat-number {
            font-size: 2rem;
            font-weight: 800;
            color: var(--accent-purple);
            display: block;
            line-height: 1;
        }

        .stat-label {
            font-size: 0.9rem;
            color: var(--text-gray);
            margin-top: 0.5rem;
        }

        .community-message {
            background: linear-gradient(135deg, rgba(167, 139, 250, 0.1), rgba(167, 139, 250, 0.05));
            border: 2px solid var(--accent-purple);
            border-radius: 15px;
            padding: 2rem;
            margin: 2rem 0;
            text-align: center;
            box-shadow: 0 8px 25px rgba(0, 0, 0, 0.3);
        }

        .text-muted {
            color: var(--text-gray) !important;
        }

        /* Status badge styles */
        .bg-success {
            background: linear-gradient(135deg, var(--success-green), #059669) !important;
        }

        .bg-secondary {
            background: linear-gradient(135deg, var(--light-gray), #3d3d3d) !important;
        }

        .bg-warning {
            background: linear-gradient(135deg, var(--warning-orange), #e67e22) !important;
            color: var(--white) !important;
        }

        /* Animation for cards */
        keyframes fadeInUp {
            from

        {
            opacity: 0;
            transform: translateY(20px);
        }

        to {
            opacity: 1;
            transform: translateY(0);
        }

        }

        .volunteer-card {
            animation: fadeInUp 0.6s ease-out;
        }

            /* Staggered animation for cards */
            .volunteer-card:nth-child(1) {
                animation-delay: 0.1s;
            }

            .volunteer-card:nth-child(2) {
                animation-delay: 0.2s;
            }

            .volunteer-card:nth-child(3) {
                animation-delay: 0.3s;
            }

            .volunteer-card:nth-child(4) {
                animation-delay: 0.4s;
            }

            .volunteer-card:nth-child(5) {
                animation-delay: 0.5s;
            }

            .volunteer-card:nth-child(6) {
                animation-delay: 0.6s;
            }

        /* Responsive design */
        @@media (max-width: 768px) {
            .page-header {
                padding: 2rem 0;
                border-radius: 0 0 15px 15px;
            }

            .header-content {
                text-align: center;
            }

            .btn-join-volunteer {
                width: 100%;
                margin-top: 1rem;
            }

            .stats-grid {
                grid-template-columns: repeat(2, 1fr);
            }

            .empty-state {
                padding: 2rem 1rem;
            }

            .volunteer-avatar {
                width: 80px;
                height: 80px;
            }

                .volunteer-avatar i {
                    font-size: 2rem;
                }
        }
    </style>
}

<div class="volunteers-container">
    <!-- Page Header -->
    <div class="page-header">
        <div class="container">
            <div class="header-content d-flex justify-content-between align-items-center flex-wrap">
                <div>
                    <h1 class="fw-bold display-5 mb-2">
                        <i class="fas fa-users"></i> Our Amazing Volunteers
                    </h1>
                    <p class="lead mb-0 opacity-90">Meet the heroes making a difference in our community</p>
                </div>
                <a asp-action="Register" class="btn btn-join-volunteer">
                    <i class="fas fa-user-plus"></i> Join Our Team
                </a>
            </div>
        </div>
    </div>

    <div class="container">
        @if (!Model.Any())
        {
            <!-- Empty State -->
            <div class="empty-state">
                <div class="empty-state-icon">
                    <i class="fas fa-hands-helping"></i>
                </div>
                <h3 class="fw-bold text-muted mb-3">No Volunteers Yet</h3>
                <p class="text-muted mb-4">Be the first to join our incredible volunteer team and make a real impact!</p>
                <a asp-action="Register" class="btn btn-join-volunteer">
                    <i class="fas fa-user-plus"></i> Become First Volunteer
                </a>
            </div>
        }
        else
        {
            <!-- Statistics Overview -->
            <div class="stats-overview">
                <h5 class="stats-title">
                    <i class="fas fa-chart-pie"></i> Volunteer Community Stats
                </h5>
                <div class="stats-grid">
                    <div class="stat-item">
                        <span class="stat-number">@Model.Count()</span>
                        <span class="stat-label">Total Volunteers</span>
                    </div>
                    <div class="stat-item">
                        <span class="stat-number">@Model.Count(v => v.Status == "Active")</span>
                        <span class="stat-label"><i class="fas fa-circle-check"></i> Active</span>
                    </div>
                    <div class="stat-item">
                        <span class="stat-number">@Model.Count(v => v.RegisteredAt > DateTime.UtcNow.AddDays(-30))</span>
                        <span class="stat-label"><i class="fas fa-user-plus"></i> Last 30 Days</span>
                    </div>
                    <div class="stat-item">
                        <span class="stat-number">@Model.Count(v => v.HasTransportation)</span>
                        <span class="stat-label"><i class="fas fa-car"></i> With Transport</span>
                    </div>
                </div>
            </div>

            <!-- Volunteers Grid -->
            <div class="row">
                @foreach (var volunteer in Model)
                {
                    <div class="col-md-6 col-lg-4 mb-4">
                        <div class="volunteer-card">
                            <div class="card-body">
                                <div class="volunteer-avatar">
                                    <i class="fas fa-user"></i>
                                </div>
                                <h5 class="card-title">@volunteer.User?.FirstName @volunteer.User?.LastName</h5>

                                <div class="volunteer-details">
                                    <p class="mb-2">
                                        <strong><i class="fas fa-tools"></i>Skills:</strong>
                                        <span class="skills-badge">@volunteer.Skills</span>
                                    </p>
                                    <p class="mb-2">
                                        <strong><i class="fas fa-calendar-check"></i>Availability:</strong>
                                        @volunteer.Availability
                                    </p>
                                    <p class="mb-3">
                                        <strong><i class="fas fa-map-marker-alt"></i>Preferred Location:</strong>
                                        @volunteer.PreferredLocation
                                    </p>
                                </div>

                                @if (volunteer.HasTransportation)
                                {
                                    <div class="transportation-badge">
                                        <i class="fas fa-car"></i> Has Transportation
                                    </div>
                                }
                            </div>
                            <div class="card-footer">
                                <span class="status-badge @GetStatusClass(volunteer.Status)">
                                    <i class="@GetStatusIcon(volunteer.Status)"></i> @volunteer.Status
                                </span>
                                <small class="d-block text-muted mt-2">
                                    <i class="fas fa-calendar me-1"></i>
                                    Joined: @volunteer.RegisteredAt.ToString("MMM dd, yyyy")
                                </small>
                            </div>
                        </div>
                    </div>
                }
            </div>

            <!-- Community Message -->
            <div class="community-message">
                <h5 class="fw-bold mb-3" style="color: var(--accent-yellow);">
                    <i class="fas fa-star"></i> Together We Make a Difference!
                </h5>
                <p class="mb-0" style="color: var(--text-gray);">
                    Our volunteers are the heart of our organization. Their dedication, skills, and compassion
                    create real change in communities affected by disasters.
                    <strong style="color: var(--accent-yellow);">Join this amazing team today!</strong>
                </p>
            </div>
        }
    </div>
</div>

@functions {
    string GetStatusClass(string status)
    {
        return status?.ToLower() switch
        {
            "active" => "bg-success",
            "inactive" => "bg-secondary",
            "on leave" => "bg-warning",
            _ => "bg-secondary"
        };
    }

    string GetStatusIcon(string status)
    {
        return status?.ToLower() switch
        {
            "active" => "fas fa-circle-check",
            "inactive" => "fas fa-circle",
            "on leave" => "fas fa-clock",
            _ => "fas fa-question-circle"
        };
    }
}